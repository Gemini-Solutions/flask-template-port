node('image_builder_trivy') { 
   stage('flask_app_checkout') {
         dir ('flask_backend') {
         checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg:  [], \
userRemoteConfigs: [[credentialsId: 'admingithub', url: 'git@github.com:Gemini-Solutions/{{cookiecutter.app_name}}.git']]])
         }
    }
  try {
   stage('Build_image') {
            dir ('{{cookiecutter.app_name}}') {
              container('docker-image-builder-trivy') {
                withCredentials([usernamePassword(credentialsId: 'docker_registry', passwordVariable: 'docker_pass', usernameVariable: 'docker_user')]) {
                   sh '''docker login -u $docker_user -p $docker_pass https://registry-np.geminisolutions.com'''
              sh 'docker push registry-np.geminisolutions.com/{{cookiecutter.app_name}}/{{cookiecutter.app_name}}:1.0-$BUILD_NUMBER'
              sh 'docker push registry-np.geminisolutions.com/{{cookiecutter.app_name}}/{{cookiecutter.app_name}}'
           }
         }
        }
        stage('Deployment_stage') {
               dir ('{{cookiecutter.app_name}}') {
                   container('docker-image-builder-trivy') {
                   kubeconfig(credentialsId: 'KubeConfigCred') {
                   sh '/usr/local/bin/kubectl apply -f deployment.yaml -n dev'
                   sh '/usr/local/bin/kubectl rollout restart Deployment {{cookiecutter.app_name}}backend -n dev'

                   }
                   }
               }
           }
      }
  } finally {
     //sh 'echo current_image="registry-np.geminisolutions.com/{{cookiecutter.app_name}}/{{cookiecutter.app_name}}:1.0-$BUILD_NUMBER" > build.properties'
     //archiveArtifacts artifacts: 'build.properties', onlyIfSuccessful: true
  }
    }
